#!/bin/bash

# Verificação de execução como root
clear
if [[ "$(whoami)" != "root" ]]; then
    echo -e "\033[1;37m[\033[1;31mErro\033[1;37m] \033[1;37m- Você precisa executar como root\033[0m"
    rm $HOME/Plus > /dev/null 2>&1
    exit 0
fi

# Variáveis codificadas e reversão
_lnk=$(echo 'z1:y#x.5s0ul&p4hs$s.0a72d*n-e!v89e032:3r' | sed -e 's/[^a-z.]//ig' | rev)
_Ink=$(echo '/3×u3#s87r/l32o4×c1a×l1/83×l24×i0b×' | sed -e 's/[^a-z/]//ig')
_1nk=$(echo '/3×u3#s×87r/83×l2×4×i0b×' | sed -e 's/[^a-z/]//ig')

cd $HOME

# Função para barra de progresso
fun_bar() {
    comando[0]="$1"
    comando[1]="$2"
    (
        [[ -e $HOME/fim ]] && rm $HOME/fim
        ${comando[0]} -y > /dev/null 2>&1
        ${comando[1]} -y > /dev/null 2>&1
        touch $HOME/fim
    ) > /dev/null 2>&1 &

    tput civis
    echo -ne "  \033[1;37mAguarde \033[1;37m- \033[1;37m["
    while true; do
        for ((i = 0; i < 18; i++)); do
            echo -ne "\033[1;31m#"
            sleep 0.1s
        done
        [[ -e $HOME/fim ]] && rm $HOME/fim && break
        echo -e "\033[1;37m]"
        tput cuu1
        tput dl1
        echo -ne "  \033[1;37mAguarde \033[1;37m- \033[1;37m["
    done
    echo -e "\033[1;37m]\033[1;37m - \033[1;32mOK!\033[1;37m"
    tput cnorm
}

# Função para verificar key
function verif_key() {
    krm=$(echo '5:q-3gs2.o7%8:1' | rev)
    chmod +x $_Ink/list > /dev/null 2>&1
    [[ ! -e "$_Ink/list" ]] && {
        echo -e "\n\033[1;31mKEY INVÁLIDA!\033[0m"
        rm -rf $HOME/Plus > /dev/null 2>&1
        clear
        exit 1
    }
}

# Função para otimizar Python
otimize_python() {
    apt install pip python3-pip uuid-runtime socat -y
    pip install speedtest-cli > /dev/null 2>&1
    for version in 3.6 3.7 3.8 3.9; do
        apt-get install python${version} -y > /dev/null 2>&1
    done
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 2
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 3
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 4
    update-alternatives --set python3 /usr/bin/python3.6
}

# Mensagem inicial
clear
echo -e "\033[1;37m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;32m        ⇱ BEM-VINDO AO SSH PLUS! ⇲\033[0m"
echo -e "\033[1;37m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""
echo -e "\033[1;31mATENÇÃO!\033[1;37m Esse script irá instalar ferramentas para"
echo -e "gerenciamento de rede, sistema e usuários."
echo ""
echo -e "\033[1;37m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "             \033[1;37m• \033[1;32mEDIT: @LUCAS\033[1;37m •"
echo -e "\033[1;37m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""

# Confirmação para continuar
echo -ne "\033[38;5;118mPressione ENTER para continuar a instalação: \033[0m"
read x
[[ $x = @(n|N) ]] && exit

# Etapas de instalação e configuração
echo -e "\033[1;37mInstalando dependências e pacotes, aguarde...\033[0m"
fun_bar "apt-get update" "apt-get upgrade"
fun_bar "otimize_python"

# Finalização
echo -e "\033[1;37m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;32mINSTALAÇÃO CONCLUÍDA!\033[0m"
echo -e "\033[1;37mPara iniciar, digite: \033[1;36mmenu\033[0m"
echo -e "\033[1;37m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"

# Limpeza
rm $HOME/Plus > /dev/null 2>&1
cat /dev/null > ~/.bash_history
history -c
