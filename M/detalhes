#!/bin/bash 

echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
echo -e "\033[0;34m┃\E[44;1;37m           INFORMACOES DO VPS            \E[0m\033[0;34m┃"
echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m\n"

# Informações do Sistema Operacional
if [ -f /etc/lsb-release ]; then
    echo -e "\033[1;31m• \033[1;32mSISTEMA OPERACIONAL\033[1;31m •\033[0m\n"
    name=$(grep -oP '(?<=^DESCRIPTION=).+' /etc/lsb-release)
    codename=$(grep -oP '(?<=^CODENAME=).+' /etc/lsb-release)
    echo -e "\033[1;33mNOME: \033[1;37m$name"
    echo -e "\033[1;33mCODENAME: \033[1;37m$codename"
    echo -e "\033[1;33mKERNEL: \033[1;37m$(uname -s)"
    echo -e "\033[1;33mKERNEL RELEASE: \033[1;37m$(uname -r)"
    if [ -f /etc/os-release ]; then
        devlike=$(grep -oP '(?<=^ID_LIKE=).+' /etc/os-release)
        echo -e "\033[1;33mDERIVADO DO OS: \033[1;37m$devlike\n"
    fi
else
    system=$(cat /etc/issue.net)
    echo -e "\033[1;31m• \033[1;32mSISTEMA OPERACIONAL\033[1;31m •\033[0m\n"
    echo -e "\033[1;33mNOME: \033[1;37m$system\n"
fi

# Informações do Processador
if [ -f /proc/cpuinfo ]; then
    uso=$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')
    echo -e "\033[1;31m• \033[1;32mPROCESSADOR\033[1;31m •\033[0m\n"
    modelo=$(grep -m 1 "model name" /proc/cpuinfo | awk -F ': ' '{print $2}')
    cpucores=$(nproc)
    cache=$(grep -m 1 "cache size" /proc/cpuinfo | awk -F ': ' '{print $2}')
    echo -e "\033[1;33mMODELO:\033[1;37m$modelo"
    echo -e "\033[1;33mNUCLEOS:\033[1;37m $cpucores"
    echo -e "\033[1;33mMEMORIA CACHE:\033[1;37m$cache"
    echo -e "\033[1;33mARQUITETURA: \033[1;37m$(uname -p)"
    echo -e "\033[1;33mUTILIZACAO: \033[37m$uso\n"
else
    echo -e "\033[1;32mPROCESSADOR\033[0m\nNÃO FOI POSSÍVEL OBTER INFORMAÇÕES"
fi

# Informações de Memória RAM
if command -v free > /dev/null; then
    ram1=$(free -h | awk '/^Mem:/ {print $2}')
    ram2=$(free -h | awk '/^Mem:/ {print $4}')
    ram3=$(free -h | awk '/^Mem:/ {print $3}')
    usoram=$(free -m | awk 'NR==2{printf "%.2f%%\t\t", $3*100/$2}')
    echo -e "\033[1;31m• \033[1;32mMEMORIA RAM\033[1;31m •\033[0m\n"
    echo -e "\033[1;33mTOTAL: \033[1;37m$ram1"
    echo -e "\033[1;33mEM USO: \033[1;37m$ram3"
    echo -e "\033[1;33mLIVRE: \033[1;37m$ram2"
    echo -e "\033[1;33mUTILIZACAO: \033[37m$usoram\n"
else
    echo -e "\033[1;32mMEMORIA RAM\033[0m\nNÃO FOI POSSÍVEL OBTER INFORMAÇÕES"
fi

# Remover arquivo e exibir serviços em execução
[[ ! -e /bin/versao ]] && rm -rf /etc/SSHPlus

echo -e "\033[1;31m• \033[1;32mSERVIÇOS EM EXECUÇÃO\033[1;31m •\033[0m\n"
PT=$(lsof -V -i tcp -P -n | grep -v "ESTABLISHED" | grep -v "COMMAND" | grep "LISTEN")
for porta in $(echo -e "$PT" | cut -d: -f2 | cut -d' ' -f1 | uniq); do
    svcs=$(echo -e "$PT" | grep -w "$porta" | awk '{print $1}' | uniq)
    echo -e "\033[1;33mSERVIÇO \033[1;37m$svcs \033[1;33mPORTA \033[1;37m$porta"
done
