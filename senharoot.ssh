#!/bin/bash
# Script para configurar autenticação root na VPS
# Desenvolvido por Lucas VPN
clear

# Verifica se o script está sendo executado como root
if [[ "$(whoami)" != "root" ]]; then
    echo -e "\033[1;31mEste script deve ser executado como ROOT.\033[1;32m (\033[1;33msudo -i\033[1;32m)\033[0m"
    exit 1
fi

# Limpa regras de firewall existentes
iptables -F

# Define servidores DNS
cat << EOF > /etc/resolv.conf
nameserver 1.1.1.1
nameserver 8.8.8.8
EOF

# Atualiza pacotes do sistema
apt update -y > /dev/null

# Configura SSH para permitir autenticação root por senha
SSH_CONFIG="/etc/ssh/sshd_config"

sed -i -e "s/#PermitRootLogin.*/PermitRootLogin yes/" \
       -e "s/PermitRootLogin.*/PermitRootLogin yes/" \
       -e "s/#PasswordAuthentication no/PasswordAuthentication yes/" \
       -e "s/PasswordAuthentication no/PasswordAuthentication yes/" \
       "$SSH_CONFIG"

if [[ -f "/etc/ssh/sshd_config.d/60-cloudimg-settings.conf" ]]; then
    sed -i "s/PasswordAuthentication no/PasswordAuthentication yes/" /etc/ssh/sshd_config.d/60-cloudimg-settings.conf
fi

# Reinicia o serviço SSH
service ssh restart > /dev/null

# Configura firewall para abrir portas específicas
for PORT in 81 80 443 8799 8080 1194; do
    iptables -A INPUT -p tcp --dport $PORT -j ACCEPT
done

# Define senha do usuário root
clear
echo -ne "\033[1;32mDigite a nova senha para o usuário ROOT\033[1;37m: "
read -s senha
echo ""

if [[ -z "$senha" ]]; then
    echo -e "\033[1;31mSenha inválida! Operação cancelada.\033[0m"
    exit 1
fi

echo "root:$senha" | chpasswd
echo -e "\033[1;32mSenha para ROOT definida com sucesso!\033[0m"

# Mensagem de conclusão
echo -e "\n\033[1;33mConfiguração concluída. VPS pronta para uso.\033[0m"
